The bug that I found on my code is located in remodelCard function. The problem on this function is that it always discards the wrong card which is of index 0 from the player’s hand i.e “discardCard(0, currentPlayer, state, 0);”. In fact, the function should pass the hand position to the discard function like the following line of code “discardCard(handPos, currentPlayer, state, 0);” The debugger that I used is Eclipse debugger and the reason of this is that I needed a debugger tool that has a graphical user interface for faster interaction with the program. The debugger did not help that much since the bug is logical bug and it’s not a fault that causes segmentation fault or memory leak. However, I was able to use it so I can check the state of each variable before and after a breakpoint. Attached an image of the setup for the debugger setup. The principles of Agan that are applies in order to find and solve this bug are Understanding the system which is the most important one by being able to understand what each action card do and whether each action card should do what is supposed to do. The other rule is by making it fail by starting with very simple setup that causes certain functionality to fail and then implement all the prerequisites for each function.
